{"version":3,"sources":["book.js","BookRow.js","LibraryTable.js","NewBookForm.js","App.js","index.js"],"names":["Book","title","author","pages","read","this","BookRow","props","book","i","deleteBook","toggleRead","className","onClick","Component","LibraryTable","scope","library","bookRows","map","key","React","Children","mapTitlesToHeaders","NewBookForm","handleChange","e","target","name","value","setState","handleForm","submitForm","initialState","state","onSubmit","aria-label","type","onChange","required","min","htmlFor","App","componentDidUpdate","updateStorage","localStorage","setItem","JSON","stringify","loadLibrary","getItem","parse","sampleLib","newLibrary","filter","idx","preventDefault","elements","newBook","formOpen","toggleForm","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.700346be.chunk.js","sourcesContent":["class Book {\n  constructor(title, author, pages, read) {\n    this.title = title;\n    this.author = author;\n    this.pages = pages;\n    this.read = read;\n  };\n\n  info() {\n    return `${this.title} by ${this.author}, ${this.pages} pages, ${this.read}`\n  }\n}\n\nexport default Book;\n","import React, { Component } from \"react\";\n\nclass BookRow extends Component {\n  // Optional: const { title, author, pages, read } = JSON.parse(book);\n  // TODO: Sort out the \"Key\" situation: Use stringified book as key?\n  // Use a unique key from \"React.Children.map\"?\n\n  render() {\n    const { book, i, deleteBook, toggleRead } = this.props;\n\n    return (\n      <tr>\n        <td className=\"title\">{ book.title }</td>\n        <td>{ book.author }</td>\n        <td>{ book.pages }</td>\n        <td className=\"read\" onClick={() => toggleRead(i)}>{ book.read }</td> \n        <td><button onClick={() => deleteBook(i)}>Delete Book</button></td>\n      </tr>\n    );\n  }\n}\n\nexport default BookRow;\n","import React, {Component} from 'react';\nimport BookRow from \"./BookRow\";\n\nclass LibraryTable extends Component {\n  // should this hold a \"book\" state to facilitate deletion?\n\n  mapTitlesToHeaders(title) {\n    return (\n      <th scope=\"col\">{ title }</th>\n    );\n  }\n\n  render() {\n    const { \n      library,\n      deleteBook,\n      toggleRead,\n    } = this.props;\n\n    const bookRows = library.map((book, i) => {\n      return (\n        <BookRow \n          book={book} \n          key={i} \n          i={i} \n          deleteBook={deleteBook}\n          toggleRead={toggleRead}\n        />\n      );\n    }); // Option: set key to book.name, then search by that later?\n\n    const columnTitles = [\n      \"Title\",\n      \"Author\",\n      \"Pages\",\n      \"Read?\",\n      \"Delete Book\"\n    ];\n\n    // Optional: { React.Children.map(books, this.mapBooksToRows) }\n\n    return (\n      <table>\n        <thead>\n          <tr>\n            { React.Children.map(\n              columnTitles,\n              this.mapTitlesToHeaders\n            ) }\n          </tr>\n        </thead>\n        <tbody>\n          { bookRows }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default LibraryTable;\n","import React, { Component } from \"react\";\n\nclass NewBookForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      title: '',\n      author: '',\n      pages: '',\n      read: null,\n    }\n\n    this.state = this.initialState;\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleForm = (e) => {\n    this.props.submitForm(e);\n    this.setState(this.initialState);\n    // ToDo: how to clear form validation states?\n  }\n\n  render() {\n    const { title, author, pages } = this.state;\n\n    return (\n      <form onSubmit={this.handleForm}>\n        <p>Book Title: \n          <abbr title=\"This field is mandatory\" aria-label=\"required\">\n            {' '}*{' '}\n          </abbr> \n          <input \n            name=\"title\"\n            type=\"text\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n        </p>\n        <p>Author: \n          <abbr title=\"This field is mandatory\" aria-label=\"required\">\n            {' '}*{' '}\n          </abbr> \n          <input\n            name=\"author\"\n            type=\"text\"\n            value={author}\n            onChange={this.handleChange}\n            required \n          />\n        </p>\n        <p>Number of pages: \n          <abbr title=\"This field is mandatory\" aria-label=\"required\">\n            {' '}*{' '}\n          </abbr> \n          <input \n            name=\"pages\"\n            type=\"number\"\n            value={pages}\n            onChange={this.handleChange}\n            required\n            min=\"1\"\n          />\n        </p>\n        <p>Have you read it yet? \n          <abbr title=\"This field is mandatory\" aria-label=\"required\">\n            {' '}*{' '}\n          </abbr> \n          <input \n            name=\"read\"\n            type=\"radio\" \n            value=\"Yes\"\n            onChange={this.handleChange}\n            required\n          />\n          <label htmlFor=\"yes\">Yes</label>\n          <input \n            name=\"read\"\n            type=\"radio\" \n            value=\"No\"\n            onChange={this.handleChange}\n            required\n          />\n          <label htmlFor=\"no\">No</label>\n        </p>\n        {/* <input type=\"submit\" value=\"Save Book\" /> */}\n        <button>Save Book</button>\n      </form>\n    );\n  }\n}\n\nexport default NewBookForm;\n","import React, { Component } from 'react';\nimport Book from \"./book\";\nimport LibraryTable from './LibraryTable';\nimport NewBookForm from './NewBookForm';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    const library = this.loadLibrary();\n\n    this.state = {\n      library: library,\n      formOpen: false,\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.updateStorage();\n  }\n\n  updateStorage = () => {\n    localStorage.setItem('library', JSON.stringify(this.state.library))\n  }\n\n  loadLibrary = () => {\n    if (!localStorage.getItem('library')) \n      return this.sampleLib();\n    return JSON.parse(localStorage.getItem('library'));\n  }\n\n  sampleLib() {\n    return [ \n      new Book(\"The Hobbit\", \"J. R. R. Tolkein\", 295, \"No\"),\n      new Book(\"East of Eden\", \"John Steinbeck\", 601, 'Yes'),\n      new Book(\"Steppenwolf\", \"Herman Hesse\", 237, 'Yes'),\n      new Book(\"The Issue at Hand\", \"Gil Fronsdal\", 161, 'Yes'),\n    ];\n  }\n\n  deleteBook = (i) => { // Optional: pass a book as argument; delete using \"findIndex\"\n    const { library } = this.state\n    const newLibrary = library.filter((book, idx) => {\n      return i !== idx;\n    })\n    this.setState({\n      library: newLibrary\n    })\n  }\n\n  toggleRead = (i) => {\n    const { library } = this.state\n    const newLibrary = library.map((book, idx) => {\n      if (idx === i) {\n        book.read = (book.read === \"Yes\") ? \"No\" : \"Yes\";\n      }\n      return book;\n    });\n    this.setState({\n      library: newLibrary\n    });\n  }\n\n  submitForm = (e) => {\n    e.preventDefault();\n    const { title, author, pages, read } = e.target.elements;\n    const newBook = new Book(\n      title.value, \n      author.value, \n      pages.value, \n      read.value\n    );\n    this.setState({\n      library: [...this.state.library, newBook],\n      formOpen: false,\n    })\n  }\n\n  toggleForm = () => {\n    this.setState({\n      formOpen: !this.state.formOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Library</h1>\n        </header>\n  \n        <LibraryTable \n          library={this.state.library}\n          deleteBook={this.deleteBook}\n          toggleRead={this.toggleRead}\n        />\n        \n        <div id=\"form-wrapper\">\n          <button onClick={() => this.toggleForm()}>New Book</button>\n          {\n            this.state.formOpen \n            && <NewBookForm submitForm={this.submitForm}/>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);"],"sourceRoot":""}